# Volumi per persistenza dati
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Rete per comunicazione tra container
networks:
  tech_company_game:
    driver: bridge

services:
  # Servizio Laravel con controllo migration automatico
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tech_company_game_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=tech_company_game
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tech_company_game

  # Webserver Nginx
  nginx:
    image: nginx:alpine
    container_name: tech_company_game_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - tech_company_game

  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: tech_company_game_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tech_company_game
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d tech_company_game"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - tech_company_game

  # Redis
  redis:
    image: redis:7-alpine
    container_name: tech_company_game_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ""
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - tech_company_game

  # Laravel Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tech_company_game_queue
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: php artisan queue:work redis --sleep=3 --tries=3 --max-time=3600
    environment:
      - APP_ENV=local
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    depends_on:
      - app
    networks:
      - tech_company_game